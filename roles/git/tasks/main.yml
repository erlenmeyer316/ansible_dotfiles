---
- name: "{{ role_name }} | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "{{ role_name }} | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists

- name: "Git | Set diff.colorMoved"
  community.general.git_config:
    name: diff.colorMoved
    scope: global
    value: zebra

- name: "Git | Set fetch.prune"
  community.general.git_config:
    name: fetch.prune
    scope: global
    value: true

- name: "Git | Set init.defaultBranch"
  community.general.git_config:
    name: init.defaultBranch
    scope: global
    value: main

- name: "Git | Set pull.rebase"
  community.general.git_config:
    name: pull.rebase
    scope: global
    value: true

- name: "Git | Set rebase.autoStash"
  community.general.git_config:
    name: rebase.autoStash
    scope: global
    value: true

- name: "Git | Read secret from Keepassxc"
  when: keepassxc_installed
  block:
    - name: "Keepassxc | Get kpxc.git.secret.email"
      ansible.builtin.command: "$(echo {{ keepass_psw }} | keepassxc-cli show -qs -a {{ kpxc.git.email }} -{{ keepass_dbx }} {{ kpxc.git.secret }})"
      register: kpxc_git_user_email
      changed_when: false

    - name: "Keepassxc | Set git_user_email"
      ansible.builtin.set_fact:
        git_user_email: "{{ kpxc_git_user_email.stdout }}"
      no_log: true

- name: "Git | Set user.email"
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ git_user_email }}"
  no_log: true

- name: "Git | Read secret from Keepassxc"
  when: keepassxc_installed
  block:
    - name: "Keepassxc | Get kpxc.git.secret.username"
      ansible.builtin.command: "$( echo {{ keepass_psw }} | keepassxc-cli show -qs -a {{ kpxc.git.username }} {{ keepass_dbx }} {{ kpxc.git.secret }}"
      register: kpxc_git_username
      changed_when: false

    - name: "Keepassxc | Set git_username"
      ansible.builtin.set_fact:
        git_username: "{{ kpxc_git_username.stdout }}"
      no_log: true

- name: "Git | Set user.name"
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ git_username }}"

      #- name: "Git | Set user.name"
      #  community.general.git_config:
      #    name: user.name
      #    scope: global
      #    value: "{{ git_user_name }}"

      #- name: "Git | Set user.signingkey"
      #  community.general.git_config:
      #    name: user.signingkey
      #    scope: global
      #    value: "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"

      #- name: "Git | Set gpg.format"
      #  community.general.git_config:
      #    name: gpg.format
      #    scope: global
      #    value: ssh

      #- name: "Git | Set commit.gpgsign"
      #  community.general.git_config:
      #    name: commit.gpgsign
      #    scope: global
      #    value: true

      #- name: "Git | Set tag.gpgsign"
      #  community.general.git_config:
      #    name: tag.gpgsign
      #    scope: global
      #    value: true

      #- name: "Git | Ensure ~/.config/git/allowed_signers exists"
      #  ansible.builtin.file:
      #    path: "{{ ansible_user_dir }}/.config/git"
      #    state: directory
      #    mode: "0755"

      #- name: "Git | Read allowed_signers secret from 1Password"
      #  when: op_installed
      #  block:
      #    - name: "1Password | Get allowed_signers"
      #      ansible.builtin.command: "op read '{{ op.git.allowed_signers }}'"
      #      register: op_git_ssh_allowed_signers
      #      changed_when: false
      #      no_log: true

      #    - name: "1Password | Configure ~/.config/git/allowed_signers"
      #      ansible.builtin.lineinfile:
      #        path: "{{ ansible_user_dir }}/.config/git/allowed_signers"
      #        line: "{{ op_git_ssh_allowed_signers.stdout }}"
      #        mode: "0600"
      #        create: true
      #      no_log: true

      #- name: "Git | Configure ~/.config/git/allowed_signers"
      #  when: not op_installed
      #  ansible.builtin.copy:
      #    src: allowed_signers
      #    dest: "{{ ansible_user_dir }}/.config/git/allowed_signers"
      #    mode: "0600"

      #- name: "Git | Set gpg.ssh.allowedSignersFile"
      #  community.general.git_config:
      #    name: gpg.ssh.allowedSignersFile
      #    scope: global
      #    value: "{{ ansible_user_dir }}/.config/git/allowed_signers"

- name: "Git | Set undo alias"
  community.general.git_config:
    name: alias.undo
    scope: global
    value: "reset HEAD~1 --mixed"

      #- name: "Git | Copy global.commit.template"
      #  ansible.builtin.copy:
      #    src: global.commit.template
      #    dest: "{{ ansible_user_dir }}/.config/git/commit_template"
      #    mode: "0644"

      #- name: "Git | Set commit.template"
      #  community.general.git_config:
      #    name: commit.template
      #    scope: global
      #    value: "{{ ansible_user_dir }}/.config/git/commit_template"
